<bl:widget xmlns:bl="https://www.bluexin.be/be/bluexin/mcui/widget-schema-alpha" name="category_label_button">
    <expect>
        <variable key="text" type="STRING"/>
        <variable key="initialWidth" type="INT" cache="STATIC">120</variable>
        <variable key="initialHeight" type="INT" cache="STATIC">16</variable>
        <variable key="xPos" type="DOUBLE" cache="STATIC">0.0</variable>
        <variable key="yPos" type="DOUBLE" cache="STATIC">0.0</variable>
        <variable key="active" type="BOOLEAN" cache="STATIC">true</variable>
        <variable key="colour" type="INT" cache="STATIC">0x424242FF</variable>
        <variable key="hoverColour" type="INT" cache="STATIC">(int) (0x424242FF &amp; 0xAFAFAFFF)</variable>
        <variable key="isHovered" type="BOOLEAN" cache="STATIC">false</variable>
        <variable key="isOpen" type="BOOLEAN" cache="STATIC">false</variable>
    </expect>
    <contentWidth>initialWidth</contentWidth>
    <contentHeight>initialHeight</contentHeight>
    <active>active</active>
    <x>xPos</x>
    <y>yPos</y>
    <children>
        <elementGroup name="bg">
            <x>isHovered? -initialWidth * 0.05: 0</x>
            <y>isHovered? -initialHeight * 0.05: 0</y>
            <scale>isHovered? 1.1: 1.0</scale>
            <texture>saoui:textures/hex2/hex_labels.png</texture>
            <children>
                <glRectangle> <!-- left part of label -->
                    <rgba>isHovered? hoverColour: colour</rgba>
                    <srcX cache="STATIC">0.0</srcX>
                    <srcY cache="STATIC">0.0</srcY>
                    <srcW cache="STATIC">24.0</srcW>
                    <srcH cache="STATIC">64.0</srcH>
                    <w cache="STATIC">6</w>
                    <h>initialHeight</h>
                </glRectangle>

                <glRectangle> <!-- middle part of label -->
                    <rgba>isHovered? hoverColour: colour</rgba>
                    <x cache="STATIC">6</x>
                    <srcX cache="STATIC">24.0</srcX>
                    <srcY cache="STATIC">0.0</srcY>
                    <srcW cache="STATIC">26.0</srcW>
                    <srcH cache="STATIC">64.0</srcH>
                    <w>initialWidth - 12</w>
                    <h>initialHeight</h>
                </glRectangle>

                <glRectangle> <!-- right part of label -->
                    <rgba>isHovered? hoverColour: colour</rgba>
                    <x>initialWidth - 6</x>
                    <srcX cache="STATIC">50.0</srcX>
                    <srcY cache="STATIC">0.0</srcY>
                    <srcW cache="STATIC">24.0</srcW>
                    <srcH cache="STATIC">64.0</srcH>
                    <w cache="STATIC">6</w>
                    <h>initialHeight</h>
                </glRectangle>
            </children>
        </elementGroup>

        <glString name="label">
            <x>initialWidth / 2 - strWidth(text) / 2</x>
            <y cache="STATIC">9.5</y>
            <text>isOpen ? text + " >" : text</text>
        </glString>

        <widget name="content">
            <x>initialWidth + 10</x>
            <y cache="STATIC">0</y>
            <enabled>isOpen</enabled>
            <contentWidth cache="STATIC">0</contentWidth>
            <contentHeight cache="STATIC">0</contentHeight>
        </widget>
    </children>

    <onClick>
        local self = ...
        local isOpen = self.getVariable('isOpen')
        isOpen.expression = string.gsub('!' .. isOpen.expression, '!!', '')
        self.setVariable('isOpen', isOpen)
        --- @type Element[]
        local peers = self.peers
        for _, peer in ipairs(peers) do
            if type(peer) == 'Widget' then
                local peerIsOpen = peer.getVariable('isOpen')
                if peerIsOpen and peerIsOpen.expression ~= 'false' then
                    peer.setVariable('isOpen', { type = 'BOOLEAN', expression = 'false', cache = 'STATIC' })
                end
            end
        end
        return true
    </onClick>

    <onMouseOverEvent>
        local button, _, _, entered = ...
        button.setVariable('isHovered', { type = 'BOOLEAN', expression = tostring(entered), cache = 'STATIC' })
    </onMouseOverEvent>
</bl:widget>